# Generated by Django 2.2.13 on 2020-10-17 16:24

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Auth', '0009_districtrole_flag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('bulletinId', models.CharField(blank=True, max_length=32, primary_key=True, serialize=False, verbose_name='Bulletin Id')),
                ('bulletinName', models.CharField(blank=True, max_length=50, verbose_name='Name of Bulletin')),
                ('bulletinType', models.CharField(blank=True, max_length=10, verbose_name='Type of Bulletin')),
                ('bulletinLink', models.CharField(blank=True, max_length=150, verbose_name='Link')),
                ('bulletinIssuedOn', models.DateTimeField(blank=True, null=True, verbose_name='Issued on')),
                ('lastBulletinIssuedOn', models.DateTimeField(blank=True, null=True, verbose_name='Last Issued on')),
                ('bulletinFrequency', models.CharField(blank=True, max_length=20, verbose_name='Frequency')),
                ('jointBoolean', models.BooleanField(default=False, verbose_name='is Joint?')),
                ('hostClub', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Bulletin', to='Auth.Club')),
            ],
            options={
                'verbose_name': 'Bulletin',
                'verbose_name_plural': 'Bulletins',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventId', models.CharField(blank=True, max_length=32, primary_key=True, serialize=False, verbose_name='Event Id')),
                ('eventStartDate', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('eventEndDate', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('eventName', models.CharField(blank=True, max_length=50, verbose_name='Name')),
                ('eventAvenue', models.CharField(blank=True, max_length=5, verbose_name='Avenue')),
                ('eventAttendance', models.CharField(blank=True, max_length=6, verbose_name='Attendance')),
                ('eventHours', models.CharField(blank=True, max_length=6, verbose_name='Volunteer Hours')),
                ('eventFundRaised', models.CharField(blank=True, max_length=8, verbose_name='Funds Raised')),
                ('eventDescription', models.CharField(blank=True, max_length=1000, verbose_name='Description')),
                ('eventLink', models.CharField(blank=True, max_length=150, verbose_name='Instagram Link')),
                ('eventType', models.CharField(blank=True, choices=[('1', 'Completed'), ('2', 'Future Event')], max_length=2, verbose_name='Event type')),
                ('jointBoolean', models.BooleanField(default=False, verbose_name='is Joint?')),
                ('hostClub', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event', to='Auth.Club')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionText', models.CharField(blank=True, max_length=100, verbose_name='Question Text')),
                ('questionStatus', models.BooleanField(blank=True, default=True, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'FeedbackQuestion',
                'verbose_name_plural': 'FeedbackQuestions',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('meetingId', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='Meeting Id')),
                ('meetingNo', models.CharField(blank=True, default='', max_length=3, verbose_name='Meeting Number')),
                ('meetingDate', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Date')),
                ('meetingAgenda', models.CharField(blank=True, max_length=1000, verbose_name='Agenda')),
                ('bylawsBoolean', models.BooleanField(blank=True, null=True, verbose_name='Bylaws passed?')),
                ('budgetBoolean', models.BooleanField(blank=True, null=True, verbose_name='Budget passed?')),
                ('meetingAttendance', models.CharField(blank=True, max_length=5, verbose_name='Attendance')),
                ('meetingType', models.CharField(blank=True, choices=[('1', 'BOD'), ('2', 'GBM')], max_length=2, verbose_name='Meeting Type')),
                ('jointBoolean', models.BooleanField(default=False, verbose_name='is Joint?')),
                ('hostClub', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting', to='Auth.Club')),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
            },
        ),
        migrations.CreateModel(
            name='MemberMatrixAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=40, verbose_name='Members Matrix Attribute')),
                ('operation', models.CharField(blank=True, default='', max_length=2, verbose_name='Operation')),
                ('attributeStatus', models.BooleanField(blank=True, default=True, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'MemberMatrixAttribute',
                'verbose_name_plural': 'MemberMatrixAttributes',
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(blank=True, choices=[('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'), ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], max_length=2, verbose_name='Month')),
                ('year', models.CharField(blank=True, max_length=4, verbose_name='Year')),
            ],
            options={
                'verbose_name': 'Month',
                'verbose_name_plural': 'Months',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('reportId', models.CharField(blank=True, max_length=32, primary_key=True, serialize=False, verbose_name='Report Id')),
                ('reportingMonth', models.CharField(blank=True, choices=[('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'), ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], max_length=2, verbose_name='Month')),
                ('reportingDate', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Reported on')),
                ('duesPaidAlready', models.CharField(blank=True, max_length=6, verbose_name='District Dues paid upto the last month')),
                ('duesPaidInThisMonth', models.CharField(blank=True, max_length=6, verbose_name='District Dues paid in this month')),
                ('suggestions', models.TextField(blank=True, default='', max_length=1000, verbose_name='Suggestions')),
                ('status', models.CharField(blank=True, choices=[('0', 'Incomplete'), ('1', 'Complete')], default='0', max_length=2, verbose_name='Report Status')),
                ('reportingClub', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='ReportMeetingMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Meeting')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Report')),
            ],
        ),
        migrations.CreateModel(
            name='ReportEventMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Event')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Report')),
            ],
        ),
        migrations.CreateModel(
            name='ReportBulletinMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bulletin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Bulletin')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Report')),
            ],
        ),
        migrations.CreateModel(
            name='ReportAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edit', models.BooleanField(blank=True, default=False, null=True, verbose_name='Edit permission')),
                ('view', models.BooleanField(blank=True, default=True, null=True, verbose_name='View permission')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
                ('month', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SecReport.Month')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='MemberMatrix',
            fields=[
                ('memberMatrixId', models.AutoField(primary_key=True, serialize=False)),
                ('maleCount', models.CharField(blank=True, max_length=4, verbose_name='Male Count')),
                ('femaleCount', models.CharField(blank=True, max_length=4, verbose_name='Female Count')),
                ('othersCount', models.CharField(blank=True, max_length=4, verbose_name='Others Count')),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SecReport.MemberMatrixAttribute')),
                ('reportId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Report')),
            ],
            options={
                'verbose_name': 'Member Matrix Row',
                'verbose_name_plural': 'Member Matrix rows',
            },
        ),
        migrations.CreateModel(
            name='MeetingJointClubMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jointClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Meeting')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedbackId', models.AutoField(primary_key=True, serialize=False)),
                ('booleanResponse', models.BooleanField(blank=True, null=True, verbose_name='Feedback Response')),
                ('feedbackQuestion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SecReport.FeedbackQuestion')),
                ('reportId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Report')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='EventJointClubMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Event')),
                ('jointClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
            ],
        ),
        migrations.CreateModel(
            name='DuesPaid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dues', models.IntegerField(blank=True, default=0, null=True, verbose_name='Total Dues Paid')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
            ],
            options={
                'verbose_name': 'Dues Paid',
                'verbose_name_plural': 'Dues Paid',
            },
        ),
        migrations.CreateModel(
            name='BulletinJointClubMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bulletin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SecReport.Bulletin')),
                ('jointClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Club')),
            ],
        ),
    ]
